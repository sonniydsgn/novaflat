---
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'button'> {
	tier: 'accent' | 'primary' | 'secondary' | 'tertiary'
	theme?: 'light' | 'dark'
	class?: string | undefined | null
	link?: string
	size?: 'small' | 'default'
	// modalTrigger?: '' | null
	// modalClose?: boolean | null
}

const { tier, link = false, theme = 'dark', size = 'default', class: className, type = 'button', ...rest } = Astro.props
---

{
	link ? (
		<a
			href={link}
			class:list={['link-reset', 'btn', { ['btn--' + tier]: tier }, { ['btn--' + size]: size != 'default' }, className]}
			{...rest}
		>
			<slot />
		</a>
	) : (
		<button
			class:list={[
				'btn-reset',
				'btn',
				{ ['btn--' + tier]: tier },
				{ ['btn--' + theme]: tier === 'primary' },
				{ ['btn--' + size]: size != 'default' },
				className,
			]}
			{type}
			{...rest}
		>
			<slot />
		</button>
	)
}

<style is:global>
	.link-reset {
		text-decoration: none;
	}

	.btn-reset {
		border: none;
		font-family: var(--ff-primary);
		background-color: transparent;
		cursor: pointer;
	}

	.btn {
		--scale-ratio: 0.95;

		display: inline-flex;
		align-items: center;
		justify-content: center;
		font-weight: 500;
		font-size: var(--font-primary);
		line-height: var(--lh-xs);
		transition:
			color var(--tr-primary),
			background-color var(--tr-primary),
			border-color var(--tr-primary),
			transform var(--tr-primary);
		gap: 8px;
	}

	.btn:disabled {
		cursor: not-allowed;
	}

	.btn:disabled > * {
		opacity: 0.4;
	}

	/* акцентная кнопка */
	.btn--accent {
		color: var(--clr-button-accent-text);
		background-color: var(--clr-button-accent-bg-default);
		padding-block: 24px;
		padding-inline: 32px;

		&:not(:disabled):hover {
			@media (hover) {
				background-color: var(--clr-button-accent-bg-hover);
			}
		}

		&:not(:disabled):active {
			transform: scale(var(--scale-ratio));
		}
	}

	.btn--accent.btn--small {
		font-size: var(--font-sm);
		padding-block: 16px;
		padding-inline: 24px;
	}

	/* основная кнопка */
	.btn--primary {
		padding-block: 24px;
		padding-inline: 32px;

		&:not(:disabled):active {
			transform: scale(var(--scale-ratio));
		}
	}

	.btn--primary.btn--dark {
		outline-color: var(--clr-bg-accent-200);
		color: var(--clr-button-primary-dark-text);
		background-color: var(--clr-button-primary-dark-bg-default);

		&:not(:disabled):hover {
			@media (hover) {
				background-color: var(--clr-button-primary-dark-bg-hover);
			}
		}
	}

	.btn--primary.btn--light {
		color: var(--clr-button-primary-light-text);
		background-color: var(--clr-button-primary-light-bg-default);

		&:not(:disabled):hover {
			@media (hover) {
				background-color: var(--clr-button-primary-light-bg-hover);
			}
		}
	}

	.btn--primary.btn--small {
		font-size: var(--font-sm);
		padding-block: 16px;
		padding-inline: 24px;
	}

	/* второстепенная кнопка */
	.btn--secondary {
		border-radius: 100px;
		color: var(--clr-button-secondary-text);
		background-color: var(--clr-button-secondary-bg-default);
		padding-block: 12px;
		padding-inline: 18px;

		&:not(:disabled):hover {
			@media (hover) {
				background-color: var(--clr-button-secondary-bg-hover);
			}
		}

		&:not(:disabled):active {
			transform: scale(var(--scale-ratio));
		}
	}

	.btn--secondary.btn--small {
		font-size: var(--font-sm);
	}
</style>
